events {}

http {
  server {
    listen 80;
    server_name ai.solhapp.com;

    # Certbot ACME challenge
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    # Redirect all HTTP traffic to HTTPS
    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;
    server_name ai.solhapp.com;

    ssl_certificate /etc/letsencrypt/live/ai.solhapp.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ai.solhapp.com/privkey.pem;

    location / {

      access_by_lua_file /usr/local/openresty/nginx/lua/jwt-auth.lua;

      proxy_pass http://go-server:3000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /grafana/ {
      proxy_pass http://grafana:3000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Required for subpath support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location /weaviate/ {

      access_by_lua_file /usr/local/openresty/nginx/lua/jwt-auth.lua;

      proxy_pass http://weaviate:8080/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      rewrite ^/weaviate/(.*)$ /$1 break;
    }
  }
}
