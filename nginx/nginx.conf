events {
    worker_connections 1024;
}

http {
    access_log /dev/stdout;
    error_log /dev/stderr info;
    
    # Lua package path
    lua_package_path '/usr/local/openresty/nginx/lua/?.lua;;';
    
    server {
        listen 80;
        server_name ai.solhapp.com;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;  # Explicit IPv6 binding

        server_name ai.solhapp.com;

        ssl_certificate /etc/letsencrypt/live/ai.solhapp.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ai.solhapp.com/privkey.pem;

        # JWT verification for all endpoints
        access_by_lua_block {
            local auth = require("jwt_auth")
            auth.verify()
        }

        location / {
            proxy_pass http://go-server:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /grafana/ {
            auth_basic off; # Disable JWT for Grafana if needed
            proxy_pass http://grafana:3000;
            # ... rest of config
        }

        location /weaviate/ {
            proxy_pass http://weaviate:8080/;
            rewrite ^/weaviate/(.*)$ /$1 break;
            # ... rest of config
        }
    }
}